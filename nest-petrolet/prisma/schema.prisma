// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
}

model User {
  id              String            @id @default(uuid())
  firstName       String
  lastName        String
  username        String            @unique
  email           String            @unique
  phoneNumber     String            @unique
  passwordDigest  String

  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt

  userRoles         UserRole[]
  oneTimePasswords  OneTimePassword[]
}

model Role {
  id        String     @id @default(uuid())
  name      String     @unique
  userRoles UserRole[]
}

model UserRole {
  id     String @id @default(uuid())
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String
  role   Role   @relation(fields: [roleId], references: [id], onDelete: Cascade)
  roleId String

  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
}

model OneTimePassword {
  id        String    @id @default(uuid())
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String    @unique
  value     String    @unique
  createdAt DateTime  @default(now())
}

model Listing {
  id            String   @id @default(cuid())
  title         String
  description   String
  price         Float
  location      String
  make          String
  model         String
  year          Int
  mileage       Int
  fuelType      String
  transmission  String
  condition     String   // e.g., "New", "Used"
  userId        String
  user          User     @relation(fields: [userId], references: [id])
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  images        ListingImage[]
}


model Review {
  id        String   @id @default(cuid())
  content   String
  rating    Int      @default(5) // e.g., 1-5
  reviewerId String
  reviewer   User     @relation("ReviewReviewer", fields: [reviewerId], references: [id])
  sellerId  String
  seller    User     @relation("ReviewSeller", fields: [sellerId], references: [id])
  createdAt DateTime @default(now())
}